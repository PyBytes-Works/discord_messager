name: discord_mailer
env:
  DOCKER_USER: "deskent"
  DOCKER_REPOSITORY_NAME: "deskent"
  PROJECT_NAME: "discord_mailer"
  STAGE: "prod"
  VERSION: "ver-${{ github.sha }}-prod"
  COUNT: "3.0"
on:
  push:
    branches: [ main ]
jobs:
  create_docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u $DOCKER_USER --password-stdin
      - name: Docker build
        run: |
          docker build . -t ${{ env.PROJECT_NAME }}:${{ env.VERSION }}
      - name: Docker tagging
        run: |
          docker tag ${{ env.PROJECT_NAME }}:${{ env.VERSION}} ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.COUNT }}
      - name: Docker push
        run: |
          docker push ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.COUNT }}
  deploy:
    runs-on: ubuntu-latest
    needs: [create_docker_build]
    env:
      WORK_DIR: "/home/${{ secrets.USERNAME_PROD }}/deploy"
    steps:
      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.USERNAME_PROD }}
          key: ${{ secrets.SSH_KEY_PROD }}
          script: |
            cd ${{ env.WORK_DIR }}
            docker-compose restart redis
            docker-compose stop ${{ env.PROJECT_NAME }}
            docker rmi ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.COUNT }} -f
            docker-compose up -d --build ${{ env.PROJECT_NAME }}
